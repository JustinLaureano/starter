services:
    laravel.test:
        build:
            context: './vendor/laravel/sail/runtimes/8.4'
            dockerfile: Dockerfile
            args:
                WWWGROUP: '${WWWGROUP}'
        image: 'sail-8.4/app'
        extra_hosts:
            - 'host.docker.internal:host-gateway'
        ports:
            - '${APP_PORT:-80}:80'
            - '${VITE_PORT:-5173}:${VITE_PORT:-5173}'
        environment:
            WWWUSER: '${WWWUSER}'
            LARAVEL_SAIL: 1
            XDEBUG_MODE: '${SAIL_XDEBUG_MODE:-off}'
            XDEBUG_CONFIG: '${SAIL_XDEBUG_CONFIG:-client_host=host.docker.internal}'
            IGNITION_LOCAL_SITES_PATH: '${PWD}'
        volumes:
            - '.:/var/www/html'
        networks:
            - sail
        depends_on:
            - mysql
            - redis
            - meilisearch
            - mailpit

    mysql:
        image: 'mysql/mysql-server:8.0'
        ports:
            - '${FORWARD_DB_PORT:-3306}:3306'
        environment:
            MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ROOT_HOST: '%'
            MYSQL_DATABASE: '${DB_DATABASE}'
            MYSQL_USER: '${DB_USERNAME}'
            MYSQL_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ALLOW_EMPTY_PASSWORD: 1
        volumes:
            - 'sail-mysql:/var/lib/mysql'
            - './vendor/laravel/sail/database/mysql/create-testing-database.sh:/docker-entrypoint-initdb.d/10-create-testing-database.sh'
        networks:
            - sail
        healthcheck:
            test:
                - CMD
                - mysqladmin
                - ping
                - '-p${DB_PASSWORD}'
            retries: 3
            timeout: 5s
    redis:
        image: 'redis:alpine'
        ports:
            - '${FORWARD_REDIS_PORT:-6379}:6379'
        volumes:
            - 'sail-redis:/data'
        networks:
            - sail
        healthcheck:
            test:
                - CMD
                - redis-cli
                - ping
            retries: 3
            timeout: 5s
    meilisearch:
        image: 'getmeili/meilisearch:latest'
        ports:
            - '${FORWARD_MEILISEARCH_PORT:-7700}:7700'
        environment:
            MEILI_NO_ANALYTICS: '${MEILISEARCH_NO_ANALYTICS:-false}'
        volumes:
            - 'sail-meilisearch:/meili_data'
        networks:
            - sail
        healthcheck:
            test:
                - CMD
                - wget
                - '--no-verbose'
                - '--spider'
                - 'http://127.0.0.1:7700/health'
            retries: 3
            timeout: 5s
    mailpit:
        image: 'axllent/mailpit:latest'
        ports:
            - '${FORWARD_MAILPIT_PORT:-1025}:1025'
            - '${FORWARD_MAILPIT_DASHBOARD_PORT:-8025}:8025'
        networks:
            - sail


    glitchtip:
        image: glitchtip/glitchtip
        depends_on:
            - glitchtip-postgres
            - glitchtip-redis
            - mailpit
        ports:
            - "8000:8000"
        environment:
            DATABASE_URL: postgres://postgres:postgres@glitchtip-postgres:5432/postgres
            REDIS_URL: redis://glitchtip-redis:6379/0
            SECRET_KEY: '${GLITCHTIP_SECRET_KEY}'
            PORT: 8000
            EMAIL_URL: smtp://mailpit:1025
            GLITCHTIP_DOMAIN: http://localhost:8000
            DEFAULT_FROM_EMAIL: glitchtip@starter.com
            CELERY_WORKER_AUTOSCALE: "1,3"
        restart: unless-stopped
        volumes:
            - glitchtip-uploads:/code/uploads
        networks:
            - sail

    glitchtip-postgres:
        image: postgres:17
        environment:
            POSTGRES_HOST_AUTH_METHOD: "trust"
        restart: unless-stopped
        volumes:
            - glitchtip-postgres:/var/lib/postgresql/data
        networks:
            - sail

    glitchtip-redis:
        image: valkey/valkey
        restart: unless-stopped
        networks:
            - sail

    glitchtip-worker:
        image: glitchtip/glitchtip
        command: ./bin/run-celery-with-beat.sh
        depends_on:
            - glitchtip-postgres
            - glitchtip-redis
        environment:
            DATABASE_URL: postgres://postgres:postgres@glitchtip-postgres:5432/postgres
            REDIS_URL: redis://glitchtip-redis:6379/0
            SECRET_KEY: '${GLITCHTIP_SECRET_KEY}'
            PORT: 8000
            EMAIL_URL: smtp://mailpit:1025
            GLITCHTIP_DOMAIN: http://localhost:8000
            DEFAULT_FROM_EMAIL: glitchtip@starter.com
            CELERY_WORKER_AUTOSCALE: "1,3"
        restart: unless-stopped
        volumes:
            - glitchtip-uploads:/code/uploads
        networks:
            - sail

    glitchtip-migrate:
        image: glitchtip/glitchtip
        depends_on:
            - glitchtip-postgres
            - glitchtip-redis
        command: ./bin/run-migrate.sh
        environment:
            DATABASE_URL: postgres://postgres:postgres@glitchtip-postgres:5432/postgres
            REDIS_URL: redis://glitchtip-redis:6379/0
            SECRET_KEY: '${GLITCHTIP_SECRET_KEY}'
            PORT: 8000
            EMAIL_URL: smtp://mailpit:1025
            GLITCHTIP_DOMAIN: http://localhost:8000
            DEFAULT_FROM_EMAIL: glitchtip@starter.com
            CELERY_WORKER_AUTOSCALE: "1,3"
        networks:
            - sail

    ldap:
        image: osixia/openldap:latest
        ports:
            - "389:389"
            - "636:636"
        environment:
            LDAP_ORGANISATION: "Example Inc."
            LDAP_DOMAIN: "example.local"
            LDAP_ADMIN_PASSWORD: "adminpassword"
        volumes:
            - ldap-data:/var/lib/ldap
            - ldap-config:/etc/ldap/slapd.d
            - ./docker/ldap/bootstrap:/container/bootstrap:ro
            - ./docker/ldap/init.sh:/container/init.sh:ro
        command: --copy-service --loglevel debug
        entrypoint: ["/bin/bash", "-c", "/container/tool/run --copy-service --loglevel debug && bash /container/init.sh"]
        networks:
            - sail

    phpldapadmin:
        image: osixia/phpldapadmin:latest
        container_name: phpldapadmin
        environment:
            PHPLDAPADMIN_LDAP_HOSTS: "ldap"
            PHPLDAPADMIN_HTTPS: "false"
        ports:
            - "8080:80"
        depends_on:
            - ldap
        networks:
            - sail



networks:
    sail:
        driver: bridge

volumes:
    sail-mysql:
        driver: local
    sail-redis:
        driver: local
    sail-meilisearch:
        driver: local
    glitchtip-postgres:
        driver: local
    glitchtip-uploads:
        driver: local
    ldap-data:
        driver: local
    ldap-config:
        driver: local
